language: go

go:
  - 1.4
  - 1.5
  - tip

before_install:
  - go get github.com/golang/lint/golint
  - go get golang.org/x/tools/cmd/vet
  - go get github.com/fzipp/gocyclo
  - go get github.com/mattn/goveralls

  # get our dependencies
  - go get -t ./...

install:
  # make sure stuff actually builds
  - go build

script:
  # ensure everything is formatted all pretty like
  - gofmt -l -s .
  # vet out possible issues
  - go vet ./...
  # run tests
  - go test ./... -v -race

after_success:
  - |
    echo "mode: count" > profile.cov
    for dir in $(find . -maxdepth 10 -not -path './.git*' -not -path '*/_*' -type d);
    do
    if ls $dir/*.go &> /dev/null; then
      go test -short -covermode=count -coverprofile=$dir/profile.tmp $dir
      if [ -f $dir/profile.tmp ]
      then
        cat $dir/profile.tmp | tail -n +2 >> profile.cov
        rm $dir/profile.tmp
      fi
    fi
    done
    go tool cover -func profile.cov
    goveralls -coverprofile=profile.cov -service=travis-ci -repotoken=$COVERALLS -v

after_script:
  # check possible styling errors
  - golint ./...
  # check for potentially complex functions but don't false build
  - gocyclo -over 15 . || true
  # refresh godocs in case there were api changes
  - |
    if [[ "$TRAVIS_PULL_REQUEST" == "false" ]] && [[ "$TRAVIS_BRANCH" == "master" ]]; then
      go list ./... | xargs -n 1 -I{} curl http://godoc.org/-/refresh -d path={}
    fi

before_deploy:
  - PLATFORMS=(darwin/386 darwin/amd64 linux/386 linux/amd64 windows/386 windows/amd64)
  - BINARY=snag
 # build binary for all archs
  - |
    for PLATFORM in "${PLATFORMS[@]}"; do
      echo "Building $PLATFORM"
      GOOS=${PLATFORM%/*}
      GOARCH=${PLATFORM#*/}
      if [ "$GOOS" = "windows" ]; then
        build_cmd="GOOS=$GOOS GOARCH=$GOARCH go build -o snag -ldflags '-w -s'"
      else
        build_cmd="CGO_ENABLED=0 GOOS=$GOOS GOARCH=$GOARCH go build -o snag -ldflags '-d -w -s'"
      fi
      if ! eval $build_cmd; then
        echo "Failed building snag for $PLATFORM" && return 1
      fi

      if [ "$GOOS" = "windows" ]; then
        zip snag-${GOOS}-${GOARCH}.zip snag
      else
        tar cvzf snag-${GOOS}-${GOARCH}.tgz snag
      fi
    done

deploy:
  provider: releases
  api_key: $GITHUB_AUTH_TOKEN
  file:
    - "snag-darwin-386.tgz"
    - "snag-darwin-amd64.tgz"

    - "snag-linux-386.tgz"
    - "snag-linux-amd64.tgz"

    - "snag-windows-386.zip"
    - "snag-windows-amd64.zip"

  skip_cleanup: true
  on:
    tags: true
    condition: "$TRAVIS_GO_VERSION == *1.5*"
